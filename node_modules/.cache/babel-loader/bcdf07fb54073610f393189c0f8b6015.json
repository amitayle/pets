{"ast":null,"code":"var _jsxFileName = \"/Users/amitaylevi/Documents/react/pets/src/containers/formPAge/FormPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./FormPage.css\";\nimport * as texts from \"../../Utilities/textForApp\";\nimport Button from \"../../components/UI/Button/Button\";\nimport { useState, forwardRef, useEffect } from \"react\";\nimport UserDetailsForm from \"./UserDetailsForm/UserDetailsForm\";\nimport CheckBox from \"../../components/UI/Input/CheckBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormPage = (props, ref) => {\n  _s();\n\n  const [agreeIsChecked, setAgreeIsChecked] = useState(false);\n  const [intrestedIsChecked, setIntrestedIsChecked] = useState(true);\n  const [formUserDetails, setFormUserDetails] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [allowToSend, setAllowToSend] = useState(false);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    console.log(formUserDetails);\n  };\n\n  const checkBoxes = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n      name: \"agree\",\n      type: \"checkbox\",\n      label: texts.FORM_CHECK_BOX_1,\n      value: agreeIsChecked,\n      onCheckboxChange: () => {\n        setAgreeIsChecked(!agreeIsChecked);\n        checkFormValidity();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n      name: \"intrested\",\n      type: \"checkbox\",\n      label: texts.FORM_CHECK_BOX_2,\n      value: intrestedIsChecked,\n      onCheckboxChange: () => setIntrestedIsChecked(!intrestedIsChecked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); //get the user data and  the validity of the form \n\n\n  const getUserDetails = (userDetails, formIsValid) => {\n    setFormUserDetails(userDetails);\n    setFormIsValid(formIsValid);\n    console.log(11, formIsValid);\n    checkFormValidity();\n  }; // get the validity of the form and check if the user agree to \n  //  For conditions\n\n\n  const checkFormValidity = () => {\n    const allowToSend = formIsValid && agreeIsChecked;\n    setAllowToSend(allowToSend);\n  };\n\n  useEffect;\n  useEffect(() => {\n    checkFormValidity();\n    console.log('valid', formIsValid, 'agree', agreeIsChecked);\n  }, [formIsValid, agreeIsChecked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formPage\",\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: texts.FORM_H2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textInputs\",\n        children: /*#__PURE__*/_jsxDEV(UserDetailsForm, {\n          userDetails: getUserDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkBoxes\",\n        children: [checkBoxes, /*#__PURE__*/_jsxDEV(Button, {\n          text: texts.FORM_BTN,\n          clicked: onSubmit,\n          type: \"send\",\n          disable: !allowToSend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormPage, \"hJDp5qhg9sSU7myeBDLO0D6a6ps=\");\n\n_c = FormPage;\nexport default _c2 = /*#__PURE__*/forwardRef(FormPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/amitaylevi/Documents/react/pets/src/containers/formPAge/FormPage.js"],"names":["texts","Button","useState","forwardRef","useEffect","UserDetailsForm","CheckBox","FormPage","props","ref","agreeIsChecked","setAgreeIsChecked","intrestedIsChecked","setIntrestedIsChecked","formUserDetails","setFormUserDetails","formIsValid","setFormIsValid","allowToSend","setAllowToSend","onSubmit","event","preventDefault","console","log","checkBoxes","FORM_CHECK_BOX_1","checkFormValidity","FORM_CHECK_BOX_2","getUserDetails","userDetails","FORM_H2","FORM_BTN"],"mappings":"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","sourcesContent":["import \"./FormPage.css\";\nimport * as texts from \"../../Utilities/textForApp\";\nimport Button from \"../../components/UI/Button/Button\";\nimport { useState, forwardRef, useEffect } from \"react\";\nimport UserDetailsForm from \"./UserDetailsForm/UserDetailsForm\";\nimport CheckBox from \"../../components/UI/Input/CheckBox\";\n\nconst FormPage = (props, ref) => {\n  const [agreeIsChecked, setAgreeIsChecked] = useState(false);\n  const [intrestedIsChecked, setIntrestedIsChecked] = useState(true);\n  const [formUserDetails, setFormUserDetails] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [allowToSend, setAllowToSend] = useState(false);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    console.log(formUserDetails);\n  };\n\n  const checkBoxes = (\n    <>\n      <CheckBox\n        name=\"agree\"\n        type=\"checkbox\"\n        label={texts.FORM_CHECK_BOX_1}\n        value={agreeIsChecked}\n        onCheckboxChange={() => { setAgreeIsChecked(!agreeIsChecked); checkFormValidity()}}\n      />\n      <CheckBox\n        name=\"intrested\"\n        type=\"checkbox\"\n        label={texts.FORM_CHECK_BOX_2}\n        value={intrestedIsChecked}\n        onCheckboxChange={() => setIntrestedIsChecked(!intrestedIsChecked)}\n      />\n    </>\n  );\n\n  //get the user data and  the validity of the form \n  const getUserDetails = (userDetails, formIsValid) => {\n    setFormUserDetails(userDetails);\n    setFormIsValid(formIsValid);\n    console.log(11, formIsValid);\n\n    checkFormValidity()\n\n  };\n  // get the validity of the form and check if the user agree to \n  //  For conditions\n  const checkFormValidity = () =>{\n    const allowToSend = formIsValid && agreeIsChecked\n    setAllowToSend(allowToSend);\n  }\n  useEffect\n  useEffect(() => {\n    checkFormValidity()\n    console.log('valid', formIsValid, 'agree', agreeIsChecked);\n    \n  }, [formIsValid,agreeIsChecked])\n  \n\n  return (\n    <div className=\"formPage\" ref={ref} >\n      <h2>{texts.FORM_H2}</h2>\n      <form>\n        <div className=\"textInputs\">\n          <UserDetailsForm  userDetails={getUserDetails}/>\n        </div>\n        <div className=\"checkBoxes\">\n          {checkBoxes}\n          <Button\n            text={texts.FORM_BTN}\n            clicked={onSubmit}\n            type=\"send\"\n            disable={!allowToSend}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default forwardRef(FormPage);\n"]},"metadata":{},"sourceType":"module"}