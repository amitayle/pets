{"ast":null,"code":"export const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.requird) {\n    isValid = value !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["/Users/amitaylevi/Documents/react/pets/src/Utilities/CheckValidity.js"],"names":["checkValidity","value","rules","isValid","requird","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":"AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACR,WAAO,IAAP;AACH;;AACD,MAAIA,KAAK,CAACE,OAAV,EAAmB;AACfD,IAAAA,OAAO,GAAGF,KAAK,KAAK,EAAV,IAAgBE,OAA1B;AACH;;AACD,MAAID,KAAK,CAACG,SAAV,EAAqB;AACjBF,IAAAA,OAAO,GAAGF,KAAK,CAACK,MAAN,IAAgBJ,KAAK,CAACG,SAAtB,IAAmCF,OAA7C;AACH;;AACD,MAAID,KAAK,CAACK,SAAV,EAAqB;AACjBJ,IAAAA,OAAO,GAAGF,KAAK,CAACK,MAAN,IAAgBJ,KAAK,CAACK,SAAtB,IAAmCJ,OAA7C;AACH;;AACD,MAAID,KAAK,CAACM,OAAV,EAAmB;AACf,UAAMC,OAAO,GAAG,uIAAhB;AACAN,IAAAA,OAAO,GAAGM,OAAO,CAACC,IAAR,CAAaT,KAAb,KAAuBE,OAAjC;AACH;;AAED,MAAID,KAAK,CAACS,SAAV,EAAqB;AACjB,UAAMF,OAAO,GAAG,OAAhB;AACAN,IAAAA,OAAO,GAAGM,OAAO,CAACC,IAAR,CAAaT,KAAb,KAAuBE,OAAjC;AACH;;AACD,SAAOA,OAAP;AACH,CAxBM","sourcesContent":["\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true\n    if (!rules) {\n        return true;\n    }\n    if (rules.requird) {\n        isValid = value !== '' && isValid;\n    }\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n    return isValid;\n}"]},"metadata":{},"sourceType":"module"}