{"ast":null,"code":"var _jsxFileName = \"/Users/amitaylevi/Documents/react/pets/src/containers/formPAge/UserDetailsForm/UserDetailsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as texts from \"../../../Utilities/textForApp\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { checkValidity } from \"../../../Utilities/CheckValidity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserDetailsForm = ({\n  userDetails\n}) => {\n  _s();\n\n  const [userFormElements, setUserFormElements] = useState({\n    firstName: {\n      type: \"text\",\n      placeholder: texts.FORM_FIRST_NAME,\n      value: \"\",\n      validation: {\n        requird: true,\n        minLength: 2,\n        maxLength: 16,\n        isName: true\n      },\n      valid: false,\n      touched: false\n    },\n    lastName: {\n      type: \"text\",\n      placeholder: texts.FORM_LAST_NAME,\n      value: \"\",\n      validation: {\n        requird: true,\n        minLength: 2,\n        maxLength: 16,\n        isName: true\n      },\n      valid: false,\n      touched: false\n    },\n    phone: {\n      type: \"number\",\n      placeholder: texts.FORM_PHONE,\n      value: \"\",\n      validation: {\n        requird: true,\n        isNumeric: true,\n        minLength: 7,\n        maxLength: 7\n      },\n      valid: false,\n      touched: false\n    },\n    areaCode: {\n      type: \"select\",\n      placeholder: texts.FORM_AREA_CODE,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: false\n    },\n    email: {\n      type: \"email\",\n      placeholder: texts.FORM_EMAIL,\n      value: \"\",\n      validation: {\n        requird: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    //add autoComplite google maps\n    address: {\n      type: \"text\",\n      placeholder: texts.FORM_ADDRESS,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: false\n    },\n    //add autoComplite google maps\n    city: {\n      type: \"text\",\n      placeholder: texts.FORM_CITY,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: false\n    }\n  });\n\n  const inputChangeHandler = (event, inputKey) => {\n    const updateUserFormElemelts = { ...userFormElements\n    };\n    const updateElement = { ...updateUserFormElemelts[inputKey]\n    };\n    updateElement.value = event.target.value;\n    updateElement.touched = true;\n    updateElement.valid = checkValidity(updateElement.value, updateElement.validation);\n    updateUserFormElemelts[inputKey] = updateElement;\n    setUserFormElements(updateUserFormElemelts); // userDetails(userFormElements);\n\n    console.log(userFormElements);\n    checkFormValidity();\n  };\n\n  const checkFormValidity = () => {\n    let validationOfForm = true;\n\n    for (let inputKey in userFormElements) {\n      validationOfForm = userFormElements[inputKey].valid && validationOfForm;\n    }\n\n    console.log(validationOfForm);\n    userDetails(validationOfForm);\n  };\n\n  const formElementArrey = [];\n\n  for (let key in userFormElements) {\n    formElementArrey.push({\n      key: key,\n      element: userFormElements[key]\n    });\n  }\n\n  const allFormElements = formElementArrey.map(item => {\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: item.element.type,\n      value: item.element.value,\n      placeholder: item.element.placeholder,\n      changed: event => inputChangeHandler(event, item.key),\n      touched: item.element.touched,\n      invalid: !item.element.valid\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: allFormElements\n  }, void 0, false);\n};\n\n_s(UserDetailsForm, \"Aj9fvwKlVagKVqbEdTj15D4DBXc=\");\n\n_c = UserDetailsForm;\nexport default UserDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetailsForm\");","map":{"version":3,"sources":["/Users/amitaylevi/Documents/react/pets/src/containers/formPAge/UserDetailsForm/UserDetailsForm.js"],"names":["React","useState","texts","Input","checkValidity","UserDetailsForm","userDetails","userFormElements","setUserFormElements","firstName","type","placeholder","FORM_FIRST_NAME","value","validation","requird","minLength","maxLength","isName","valid","touched","lastName","FORM_LAST_NAME","phone","FORM_PHONE","isNumeric","areaCode","FORM_AREA_CODE","email","FORM_EMAIL","isEmail","address","FORM_ADDRESS","city","FORM_CITY","inputChangeHandler","event","inputKey","updateUserFormElemelts","updateElement","target","console","log","checkFormValidity","validationOfForm","formElementArrey","key","push","element","allFormElements","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,+BAAvB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAASC,aAAT,QAA8B,kCAA9B;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AAC3C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC;AACvDQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,MADG;AAETC,MAAAA,WAAW,EAAET,KAAK,CAACU,eAFV;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,SAAS,EAAE,CAFD;AAGVC,QAAAA,SAAS,EAAE,EAHD;AAIVC,QAAAA,MAAM,EAAE;AAJE,OAJH;AAUTC,MAAAA,KAAK,EAAE,KAVE;AAWTC,MAAAA,OAAO,EAAE;AAXA,KAD4C;AAcvDC,IAAAA,QAAQ,EAAE;AACRX,MAAAA,IAAI,EAAE,MADE;AAERC,MAAAA,WAAW,EAAET,KAAK,CAACoB,cAFX;AAGRT,MAAAA,KAAK,EAAE,EAHC;AAIRC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,SAAS,EAAE,CAFD;AAGVC,QAAAA,SAAS,EAAE,EAHD;AAIVC,QAAAA,MAAM,EAAE;AAJE,OAJJ;AAURC,MAAAA,KAAK,EAAE,KAVC;AAWRC,MAAAA,OAAO,EAAE;AAXD,KAd6C;AA2BvDG,IAAAA,KAAK,EAAE;AACLb,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,WAAW,EAAET,KAAK,CAACsB,UAFd;AAGLX,MAAAA,KAAK,EAAE,EAHF;AAILC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVU,QAAAA,SAAS,EAAE,IAFD;AAGVT,QAAAA,SAAS,EAAE,CAHD;AAIVC,QAAAA,SAAS,EAAE;AAJD,OAJP;AAULE,MAAAA,KAAK,EAAE,KAVF;AAWLC,MAAAA,OAAO,EAAE;AAXJ,KA3BgD;AAwCvDM,IAAAA,QAAQ,EAAE;AACRhB,MAAAA,IAAI,EAAE,QADE;AAERC,MAAAA,WAAW,EAAET,KAAK,CAACyB,cAFX;AAGRd,MAAAA,KAAK,EAAE,EAHC;AAIRC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OAJJ;AAORI,MAAAA,KAAK,EAAE,KAPC;AAQRC,MAAAA,OAAO,EAAE;AARD,KAxC6C;AAkDvDQ,IAAAA,KAAK,EAAE;AACLlB,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,WAAW,EAAET,KAAK,CAAC2B,UAFd;AAGLhB,MAAAA,KAAK,EAAE,EAHF;AAILC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVe,QAAAA,OAAO,EAAE;AAFC,OAJP;AAQLX,MAAAA,KAAK,EAAE,KARF;AASLC,MAAAA,OAAO,EAAE;AATJ,KAlDgD;AA6DxD;AACCW,IAAAA,OAAO,EAAE;AACPrB,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,WAAW,EAAET,KAAK,CAAC8B,YAFZ;AAGPnB,MAAAA,KAAK,EAAE,EAHA;AAIPC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OAJL;AAOPI,MAAAA,KAAK,EAAE,KAPA;AAQPC,MAAAA,OAAO,EAAE;AARF,KA9D8C;AAwEvD;AACAa,IAAAA,IAAI,EAAE;AACJvB,MAAAA,IAAI,EAAE,MADF;AAEJC,MAAAA,WAAW,EAAET,KAAK,CAACgC,SAFf;AAGJrB,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OAJR;AAOJI,MAAAA,KAAK,EAAE,KAPH;AAQJC,MAAAA,OAAO,EAAE;AARL;AAzEiD,GAAD,CAAxD;;AAqFA,QAAMe,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9C,UAAMC,sBAAsB,GAAG,EAAE,GAAG/B;AAAL,KAA/B;AACA,UAAMgC,aAAa,GAAG,EAAE,GAAGD,sBAAsB,CAACD,QAAD;AAA3B,KAAtB;AACAE,IAAAA,aAAa,CAAC1B,KAAd,GAAsBuB,KAAK,CAACI,MAAN,CAAa3B,KAAnC;AACA0B,IAAAA,aAAa,CAACnB,OAAd,GAAwB,IAAxB;AACAmB,IAAAA,aAAa,CAACpB,KAAd,GAAsBf,aAAa,CACjCmC,aAAa,CAAC1B,KADmB,EAEjC0B,aAAa,CAACzB,UAFmB,CAAnC;AAKAwB,IAAAA,sBAAsB,CAACD,QAAD,CAAtB,GAAmCE,aAAnC;AACA/B,IAAAA,mBAAmB,CAAC8B,sBAAD,CAAnB,CAX8C,CAY9C;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYnC,gBAAZ;AAEAoC,IAAAA,iBAAiB;AAClB,GAhBD;;AAiBA,QAAMA,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,gBAAgB,GAAG,IAAvB;;AACA,SAAK,IAAIP,QAAT,IAAqB9B,gBAArB,EAAuC;AACrCqC,MAAAA,gBAAgB,GACdrC,gBAAgB,CAAC8B,QAAD,CAAhB,CAA2BlB,KAA3B,IAAoCyB,gBADtC;AAEC;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYE,gBAAZ;AACFtC,IAAAA,WAAW,CAACsC,gBAAD,CAAX;AACD,GARD;;AAUA,QAAMC,gBAAgB,GAAG,EAAzB;;AACA,OAAK,IAAIC,GAAT,IAAgBvC,gBAAhB,EAAkC;AAChCsC,IAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AAAED,MAAAA,GAAG,EAAEA,GAAP;AAAYE,MAAAA,OAAO,EAAEzC,gBAAgB,CAACuC,GAAD;AAArC,KAAtB;AACD;;AAED,QAAMG,eAAe,GAAGJ,gBAAgB,CAACK,GAAjB,CAAsBC,IAAD,IAAU;AACrD,wBACI,QAAC,KAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACH,OAAL,CAAatC,IAFrB;AAGE,MAAA,KAAK,EAAEyC,IAAI,CAACH,OAAL,CAAanC,KAHtB;AAIE,MAAA,WAAW,EAAEsC,IAAI,CAACH,OAAL,CAAarC,WAJ5B;AAKE,MAAA,OAAO,EAAGyB,KAAD,IAAWD,kBAAkB,CAACC,KAAD,EAAQe,IAAI,CAACL,GAAb,CALxC;AAME,MAAA,OAAO,EAAEK,IAAI,CAACH,OAAL,CAAa5B,OANxB;AAOE,MAAA,OAAO,EAAE,CAAC+B,IAAI,CAACH,OAAL,CAAa7B;AAPzB,OACOgC,IAAI,CAACL,GADZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD,GAZuB,CAAxB;AAcA,sBAAO;AAAA,cAAGG;AAAH,mBAAP;AACD,CArID;;GAAM5C,e;;KAAAA,e;AAuIN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as texts from \"../../../Utilities/textForApp\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { checkValidity } from \"../../../Utilities/CheckValidity\";\n\nconst UserDetailsForm = ({ userDetails }) => {\n  const [userFormElements, setUserFormElements] = useState({\n    firstName: {\n      type: \"text\",\n      placeholder: texts.FORM_FIRST_NAME,\n      value: \"\",\n      validation: {\n        requird: true,\n        minLength: 2,\n        maxLength: 16,\n        isName: true\n      },\n      valid: false,\n      touched: false,\n    },\n    lastName: {\n      type: \"text\",\n      placeholder: texts.FORM_LAST_NAME,\n      value: \"\",\n      validation: {\n        requird: true,\n        minLength: 2,\n        maxLength: 16,\n        isName: true\n      },\n      valid: false,\n      touched: false,\n    },\n    phone: {\n      type: \"number\",\n      placeholder: texts.FORM_PHONE,\n      value: \"\",\n      validation: {\n        requird: true,\n        isNumeric: true,\n        minLength: 7,\n        maxLength: 7,\n      },\n      valid: false,\n      touched: false,\n    },\n    areaCode: {\n      type: \"select\",\n      placeholder: texts.FORM_AREA_CODE,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    email: {\n      type: \"email\",\n      placeholder: texts.FORM_EMAIL,\n      value: \"\",\n      validation: {\n        requird: true,\n        isEmail: true,\n      },\n      valid: false,\n      touched: false,\n    },\n   //add autoComplite google maps\n    address: {\n      type: \"text\",\n      placeholder: texts.FORM_ADDRESS,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    //add autoComplite google maps\n    city: {\n      type: \"text\",\n      placeholder: texts.FORM_CITY,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: false,\n    },\n  });\n\n  const inputChangeHandler = (event, inputKey) => {\n    const updateUserFormElemelts = { ...userFormElements };\n    const updateElement = { ...updateUserFormElemelts[inputKey] };\n    updateElement.value = event.target.value;\n    updateElement.touched = true;\n    updateElement.valid = checkValidity(\n      updateElement.value,\n      updateElement.validation\n    );\n\n    updateUserFormElemelts[inputKey] = updateElement;\n    setUserFormElements(updateUserFormElemelts);\n    // userDetails(userFormElements);\n    console.log(userFormElements);\n\n    checkFormValidity();\n  };\n  const checkFormValidity = () => {\n    let validationOfForm = true;\n    for (let inputKey in userFormElements) {\n      validationOfForm =\n        userFormElements[inputKey].valid && validationOfForm ;\n      }\n      console.log(validationOfForm);\n    userDetails(validationOfForm);\n  };\n\n  const formElementArrey = [];\n  for (let key in userFormElements) {\n    formElementArrey.push({ key: key, element: userFormElements[key] });\n  }\n\n  const allFormElements = formElementArrey.map((item) => {\n    return (\n        <Input\n          key={item.key}\n          type={item.element.type}\n          value={item.element.value}\n          placeholder={item.element.placeholder}\n          changed={(event) => inputChangeHandler(event, item.key)}\n          touched={item.element.touched}\n          invalid={!item.element.valid}\n        />\n    );\n  });\n\n  return <>{allFormElements}</>;\n};\n\nexport default UserDetailsForm;\n"]},"metadata":{},"sourceType":"module"}