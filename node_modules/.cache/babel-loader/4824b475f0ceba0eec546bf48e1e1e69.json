{"ast":null,"code":"var _jsxFileName = \"/Users/amitaylevi/Documents/react/pets/src/containers/formPAge/UserDetailsForm/UserDetailsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as texts from \"../../../Utilities/textForApp\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { checkValidity } from \"../../../Utilities/CheckValidity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserDetailsForm = () => {\n  _s();\n\n  const [userFormElements, setUserFormElements] = useState({\n    firstName: {\n      type: \"text\",\n      placeholder: texts.FORM_FIRST_NAME,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: false\n    },\n    lastName: {\n      type: \"text\",\n      placeholder: texts.FORM_LAST_NAME,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: true\n    },\n    phone: {\n      type: \"phone\",\n      placeholder: texts.FORM_PHONE,\n      value: \"\",\n      validation: {\n        requird: true,\n        isNumeric\n      },\n      valid: false,\n      touched: true\n    },\n    email: {\n      type: \"email\",\n      placeholder: texts.FORM_EMAIL,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: false\n    },\n    address: {\n      type: \"text\",\n      placeholder: texts.FORM_ADDRESS,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: false\n    },\n    city: {\n      type: \"text\",\n      placeholder: texts.FORM_CITY,\n      value: \"\",\n      validation: {\n        requird: true\n      },\n      valid: false,\n      touched: false\n    }\n  });\n\n  const inputChangeHandler = (event, inputKey) => {\n    const updateUserFormElemelts = { ...userFormElements\n    };\n    const updateElement = { ...updateUserFormElemelts[inputKey]\n    };\n    updateElement.value = event.target.value;\n    updateElement.touched = true;\n    updateElement.valid = checkValidity(updateElement.value, updateElement.validation);\n    updateUserFormElemelts[inputKey] = updateElement;\n    setUserFormElements(updateUserFormElemelts);\n  };\n\n  const formElementArrey = [];\n\n  for (let key in userFormElements) {\n    formElementArrey.push({\n      key: key,\n      element: userFormElements[key]\n    });\n  }\n\n  const allInputs = formElementArrey.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: item.element.type,\n        value: item.element.value,\n        placeholder: item.element.placeholder,\n        changed: event => inputChangeHandler(event, item.key),\n        touched: item.element.touched,\n        invalid: !item.element.valid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allInputs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserDetailsForm, \"afMEjFTa65C+DEfW0zlvOb28akM=\");\n\n_c = UserDetailsForm;\nexport default UserDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetailsForm\");","map":{"version":3,"sources":["/Users/amitaylevi/Documents/react/pets/src/containers/formPAge/UserDetailsForm/UserDetailsForm.js"],"names":["React","useState","texts","Input","checkValidity","UserDetailsForm","userFormElements","setUserFormElements","firstName","type","placeholder","FORM_FIRST_NAME","value","validation","requird","valid","touched","lastName","FORM_LAST_NAME","phone","FORM_PHONE","isNumeric","email","FORM_EMAIL","address","FORM_ADDRESS","city","FORM_CITY","inputChangeHandler","event","inputKey","updateUserFormElemelts","updateElement","target","formElementArrey","key","push","element","allInputs","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as texts from \"../../../Utilities/textForApp\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { checkValidity } from \"../../../Utilities/CheckValidity\";\n\nconst UserDetailsForm = () => {\n  const [userFormElements, setUserFormElements] = useState({\n    firstName: {\n      type: \"text\",\n      placeholder: texts.FORM_FIRST_NAME,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    lastName: {\n      type: \"text\",\n      placeholder: texts.FORM_LAST_NAME,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: true,\n    },\n    phone: {\n      type: \"phone\",\n      placeholder: texts.FORM_PHONE,\n      value: \"\",\n      validation: {\n        requird: true,\n        isNumeric,\n      },\n      valid: false,\n      touched: true,\n    },\n    email: {\n      type: \"email\",\n      placeholder: texts.FORM_EMAIL,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    address: {\n      type: \"text\",\n      placeholder: texts.FORM_ADDRESS,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    city: {\n      type: \"text\",\n      placeholder: texts.FORM_CITY,\n      value: \"\",\n      validation: {\n        requird: true,\n      },\n      valid: false,\n      touched: false,\n    },\n  });\n\n  const inputChangeHandler = (event, inputKey) => {\n    const updateUserFormElemelts = {...userFormElements};\n    const updateElement = {...updateUserFormElemelts[inputKey]};\n    updateElement.value = event.target.value;\n    updateElement.touched = true;\n    updateElement.valid = checkValidity(updateElement.value, updateElement.validation);\n\n    updateUserFormElemelts[inputKey] = updateElement;\n    setUserFormElements(updateUserFormElemelts);\n\n  };\n\n  const formElementArrey = [];\n  for (let key in userFormElements) {\n    formElementArrey.push({ key: key, element: userFormElements[key] });\n  }\n\n  const allInputs = formElementArrey.map((item) => {\n    return (\n      <div key={item.key}>\n        <Input\n          type={item.element.type}\n          value={item.element.value}\n          placeholder={item.element.placeholder}\n          changed={(event) => inputChangeHandler(event, item.key)}\n          touched={item.element.touched}\n          invalid={!item.element.valid}\n        />\n      </div>\n    );\n  });\n\n  return <div>{allInputs}</div>;\n};\n\nexport default UserDetailsForm;\n"]},"metadata":{},"sourceType":"module"}